// <auto-generated />
using System;
using FootballMatches.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FootballMatches.Repositories.Migrations
{
    [DbContext(typeof(FootballMatchesContext))]
    [Migration("20211015100449_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FootballMatches.Domain.FootballMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FirstTeamGoals")
                        .HasColumnType("int");

                    b.Property<int?>("FirstTeamId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("SecondTeamGoals")
                        .HasColumnType("int");

                    b.Property<int?>("SecondTeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FirstTeamId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SecondTeamId");

                    b.ToTable("FootballMatches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstTeamGoals = 0,
                            FirstTeamId = 1,
                            LocationId = 1,
                            SecondTeamGoals = 1,
                            SecondTeamId = 2
                        },
                        new
                        {
                            Id = 2,
                            EventDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstTeamGoals = 5,
                            FirstTeamId = 3,
                            LocationId = 2,
                            SecondTeamGoals = 1,
                            SecondTeamId = 4
                        },
                        new
                        {
                            Id = 3,
                            EventDate = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstTeamGoals = 3,
                            FirstTeamId = 5,
                            LocationId = 3,
                            SecondTeamGoals = 2,
                            SecondTeamId = 6
                        },
                        new
                        {
                            Id = 4,
                            EventDate = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstTeamGoals = 3,
                            FirstTeamId = 1,
                            LocationId = 1,
                            SecondTeamGoals = 2,
                            SecondTeamId = 6
                        },
                        new
                        {
                            Id = 5,
                            EventDate = new DateTime(2021, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstTeamGoals = 4,
                            FirstTeamId = 2,
                            LocationId = 1,
                            SecondTeamGoals = 5,
                            SecondTeamId = 6
                        });
                });

            modelBuilder.Entity("FootballMatches.Domain.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chisinau"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tiraspol"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Anenii"
                        });
                });

            modelBuilder.Entity("FootballMatches.Domain.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Player 1",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Player 2",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Player 3",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Player 4",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Player 5",
                            TeamId = 4
                        },
                        new
                        {
                            Id = 6,
                            Name = "Player 6",
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("FootballMatches.Domain.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Team 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Team 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Team 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Team 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Team 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Team 6"
                        });
                });

            modelBuilder.Entity("FootballMatches.Domain.FootballMatch", b =>
                {
                    b.HasOne("FootballMatches.Domain.Team", "FirstTeam")
                        .WithMany()
                        .HasForeignKey("FirstTeamId");

                    b.HasOne("FootballMatches.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FootballMatches.Domain.Team", "SecondTeam")
                        .WithMany()
                        .HasForeignKey("SecondTeamId");
                });

            modelBuilder.Entity("FootballMatches.Domain.Player", b =>
                {
                    b.HasOne("FootballMatches.Domain.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
